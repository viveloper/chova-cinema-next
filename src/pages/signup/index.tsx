import Layout from '@/components/Layout';
import useAuth from '@/hooks/useAuth';
import styled from '@emotion/styled';
import Head from 'next/head';
import { ChangeEvent, FormEvent, useState } from 'react';

// TODO: 입력값 유효성 검사
export default function Signup() {
  const [inputs, setInputs] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: '',
  });

  const { signup, errorMessage } = useAuth();

  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    signup({ ...inputs });
  };
  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setInputs((prev) => ({
      ...prev,
      [name]: value,
    }));
  };
  return (
    <>
      <Head>
        <title>Signup - Chova Cinema</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <SigninBlock>
          <div className="tabs"></div>
          <SigninFormBlock>
            <div className="center">
              <form onSubmit={handleSubmit}>
                <div className="input-group">
                  <input
                    type="text"
                    name="name"
                    placeholder="이름을 입력해주세요"
                    value={inputs.name}
                    onChange={handleChange}
                  />
                  <input
                    type="text"
                    name="email"
                    placeholder="이메일을 입력해주세요"
                    value={inputs.email}
                    onChange={handleChange}
                  />
                  <input
                    type="password"
                    name="password"
                    placeholder="비밀번호를 입력해주세요"
                    value={inputs.password}
                    onChange={handleChange}
                  />
                  <input
                    type="password"
                    name="confirmPassword"
                    placeholder="비밀번호를 다시 한번 입력해주세요"
                    value={inputs.confirmPassword}
                    onChange={handleChange}
                  />
                </div>
                <button type="submit">회원가입</button>
              </form>
              {errorMessage && <p className="error-message">{errorMessage}</p>}
            </div>
          </SigninFormBlock>
        </SigninBlock>
      </Layout>
    </>
  );
}

const SigninBlock = styled.div`
  padding: 60px 0;
  margin: 80px 0;
`;

const SigninFormBlock = styled.div`
  background: #f5f5f5;
  width: 100%;
  height: 360px;
  .center {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  form {
    display: flex;
    justify-content: space-between;
    width: 100%;
    .input-group {
      flex: 1;
      input {
        display: block;
        width: 100%;
        height: 45px;
        padding: 0 18px;
        font-size: 14px;
        font-family: 'Noto Sans KR', 'Roboto', 'dotum', 'sans-serif';
        border: 1px solid #ddd;
        border-radius: 4px;
        outline: none;
      }
      input + input {
        margin-top: 10px;
      }
    }
    button {
      background: #ff243e;
      width: 110px;
      border: none;
      border-radius: 4px;
      outline: none;
      color: #fff;
      font-size: 16px;
      margin-left: 10px;
      cursor: pointer;
      transition: background 0.3s ease;
      &:hover {
        background: #ff7384;
      }
    }
  }
  .error-message {
    font-family: 'Noto Sans KR', 'Roboto', 'dotum', 'sans-serif';
    color: red;
    margin-top: 20px;
  }
`;
